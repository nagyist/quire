version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.5.3
  cypress: cypress-io/cypress@3.4.3
  mac: circleci/macos@2.5.2
  node: circleci/node@7.1.0
  win: circleci/windows@5.1.0

executors:
  linux:
    docker:
      - image: cimg/base:current-22.04
        user: root
  macos:
    macos:
      xcode: '16.2.0'
  win: 
    machine:
      image: windows-server-2019-vs2019:current
      resource_class: windows.medium

anchors:

  # TODO: Need the release ver as a var for use in npm pack
  - &npm_cache_key package-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ .Environment.CACHE_VERSION }}

  - &os_param
    parameters:
      os:
        type: string

  - &matrix_params
    matrix:
      parameters:
        os: [ 'linux', 'macos', 'win' ]
        # TODO: Supported node versions

commands:
  # Pack and install the CLI globally (NB: uncached puppeteer install takes a while)
  build_install_cli:
    steps:
      - run:
          name: Install CLI
          no_output_timeout: 30m
          command: npm pack -w packages/cli && npm install --ignore-scripts --foreground-scripts -g thegetty-quire-cli-*.tgz
      - run:
          name: Quire Version
          command: quire --version

  build_install_cli-linux:
    steps:
      - node/install:
          node-version: "22.14.0"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - build_install_cli

  build_install_cli-macos:
    steps:
      - node/install:
          node-version: "22.14.0"
      - browser-tools/install-chrome:
          chrome-version: 115.0.5790.98
      - browser-tools/install-chromedriver      
      - build_install_cli

  build_install_cli-win:
    steps:
      # Zip to package the test-built site
      - run: choco install zip
      - run: choco install googlechrome chromedriver --ignore-checksums
      - build_install_cli

  install_deps-linux:
    steps:
      - run:
          name: Install External Dependencies -- eg Prince
          command: exit

  install_deps-macos:
    steps:
      - run:
          name: Install External Dependencies -- eg Prince
          command: exit

  install_deps-win:
    steps:
      - run:
          name: Install External Dependencies -- eg Prince
          command: exit

  run_tests:
    steps:
      - run:
          name: Set git email
          command: git config --global user.email quire@getty.edu 
      # Install test dependencies only
      - run:
          name: Install deps
          command: npm install --ignore-scripts --foreground-scripts
      - run:
          name: Run integration tests
          command: mkdir -p reports && npm run test:report

      - store_test_results:
          path: ava.xml
      # @TODO: Turn this off when we're happy with browser test coverage
      - store_artifacts:
          path: publication.zip

      # Run core package tests - @TODO: Consider moving this above the integration test
      - run:
          name: Run CLI tests
          command: npm -w packages/cli run test
      - run:
          name: Run 11ty tests
          command: npm -w packages/11ty run test

  test-linux:
    steps:
      # @TODO: This was the old cypress line, likely needs replicated or -browsers image used
      # - run:
      #     name: Install Cypress Dependencies
      #     command: apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - run_tests

  test-macos:
    steps:
      - run_tests

  test-win:
    steps:
      - run_tests

jobs:
  build_install_test:
    <<: *os_param
    executor: << parameters.os >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - *npm_cache_key
      - build_install_cli-<< parameters.os >>
      - install_deps-<< parameters.os >>
      - save_cache:
          key: *npm_cache_key
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
      - test-<< parameters.os >>

workflows:
  build_install_test:
    # @TODO: don't run for docs/, etc
    when: true
    jobs:
      - build_install_test:
          <<: *matrix_params
          name: build_install_test-<< matrix.os >>

<figure class="object-card__image" :data-field-name="attribute.name">
  <img :src="src(attributes)" :alt="alt(attributes)">
</figure>

<script webc:setup>
/**
 * Get object image `alt` from `thumbnail` property
 */
const alt = ({ data }) => typeof data.thumbnail === 'object' ? data.thumbnail.alt : '';

/**
 * Returns the served asset location for this image
 * accounting for fully qualified asset URLs
 * @TODO account for pathPrefix of hosted assets
 */
const assetSrc = (srcPath) => {
  const regexp = new RegExp(/^(https?:\/\/|\/iiif\/)/)
  const { imageDir } = this.config.figures
  return regexp.test(srcPath)) ? srcPath : `${imageDir}/${srcPath}`
}

/**
 * Get object image `src` from `figures` or `thumbnail` properties.
 * 
 * @TODO: Find source of thumbnail string / object type ambiguity, refactor it out of state spcae
 */
const src = ({ data }) => {
  const { figures, thumbnail } = data;

  if (thumbnail && typeof thumbnail === 'string') return assetSrc(thumbnail)
  if (thumbnail && typeof thumbnail === 'object') return assetSrc(thumbnail.src)

  if (!figures) return ''

  const thumbFig = figures?.find(({ mediaType }) => mediaType === 'image')

  if (thumbFig && thumbFig.thumbnail && typeof thumbFig.thumbnail == 'string' ) return assetSrc(thumbFig.thumbnail)

  if (thumbFig && thumbFig.thumbnail && typeof thumbFig.thumbnail == 'object' ) return assetSrc(thumbFig.thumbnail.src)

  return ''
};
</script>
